name: PROD Server Deploy 
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'deployment')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9  
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        run: |
          export ALLOWED_HOSTS='*'
          export GITHUB_WORKFLOW=True
          export MODE=workflow
          cd backend
          python manage.py makemigrations
          python manage.py migrate  
      - uses: actions/checkout@v2.4.0
 
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}  
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/auto_deploy_test:latest         
 
      - name: Install SSH Key 
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY_PROD_SERVER }}
          known_hosts: unnecessary
        
      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT_PROD_SERVER}} -H ${{ secrets.SSH_HOST_PROD_SERVER }}  >> ~/.ssh/known_hosts
      
      - name: Sync File
        env:
         dest: 'string@154.26.128.106:/home/string/Auto_Deploy_Test' 
        run: |
         echo "${{secrets.SSH_PRIVATE_KEY_PROD_SERVER}}" > deploy_key
         chmod 600 ./deploy_key
         rsync -chav --delete \
           -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
           --exclude /deploy_key \
           --exclude /.git/ \
           --exclude /.github/ \
           --exclude /node_modules/ \
           ./ ${{env.dest}}
           
  Deployment:
     name: Deploy in Prod Server
     needs: [build]
     runs-on: ubuntu-latest
     steps:
        - uses: appleboy/ssh-action@master
          with:
           host: ${{ secrets.SSH_HOST_PROD_SERVER }}
           username: ${{ secrets.SSH_USER_PROD_SERVER }}
           password: String123$
           port: ${{ secrets.SSH_PORT_PROD_SERVER }}
           script: |
            cd /home/string/Auto_Deploy_Test
            docker-compose up --build -d
